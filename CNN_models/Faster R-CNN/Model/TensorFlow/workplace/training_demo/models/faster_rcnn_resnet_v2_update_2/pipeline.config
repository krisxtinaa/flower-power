# Faster R-CNN with Inception Resnet v2 (no atrous)
# Sync-trained on COCO (with 8 GPUs) with batch size 16 (800x1333 resolution)
# Initialized from Imagenet classification checkpoint
# TF2-Compatible, *Not* TPU-Compatible
#
# Achieves 39.6 mAP on COCO

model {
  faster_rcnn {
    num_classes: 5
    image_resizer {
      fixed_shape_resizer {
        width: 800
        height: 600
      }
    }

    feature_extractor {
      type: 'faster_rcnn_inception_resnet_v2_keras'
    }

# Creates a lot of small images from the initial image where it can find features.

    first_stage_anchor_generator {
      grid_anchor_generator {
        scales: [0.25, 0.5, 1.0, 2.0]
        aspect_ratios: [0.5, 1.0, 2.0]
        height_stride: 12
        width_stride: 12
      }
    }

# Here we set the parameters for each convolution layer [FIRST STAGE].
# Convolutional neural networks apply a filter to an input to create a
# feature map that summarizes the presence of detected features in the input.
# By increasing the l2_regularizer we reduce the chance of the model to over-fit.

    first_stage_box_predictor_conv_hyperparams {
      op: CONV
      regularizer {
        l2_regularizer {
          weight: 0.01
        }
      }
      initializer {
        truncated_normal_initializer {
          stddev: 0.01
        }
      }
    }

# Set up parameters:
# first_stage_nms_score_threshold -> In the first stage of convolution which values should we keep, if set to 0 , keep all values !
# first_stage_nms_iou_threshold -> How closely/how good was the match of the object, if set to 0, keep all values !
# first_stage_max_proposals -> How many proposal do we want to keep from the first stage
# first_stage_localization_loss_weight -> How the loss should be pushed, more for localization or for objectness (classification)
# first_stage_objectness_loss_weight -> How the loss should be pushed, more for localization or for objectness (classification)
# maxpool_kernel_size -> How much should the imaged be shrunk during the Max pooling

    first_stage_nms_score_threshold: 0.00
    first_stage_nms_iou_threshold: 0.07
    first_stage_max_proposals: 500
    first_stage_localization_loss_weight: 1.0
    first_stage_objectness_loss_weight: 1.0
    initial_crop_size: 16
    maxpool_kernel_size: 2
    maxpool_stride: 2

# Second Stage Initial Processing

    second_stage_box_predictor {
      mask_rcnn_box_predictor {
        use_dropout: false
        dropout_keep_probability: 0.9
        fc_hyperparams {
          op: FC
          regularizer {
            l2_regularizer {
              weight: 0.01
            }
          }
          initializer {
            variance_scaling_initializer {
              factor: 1.0
              uniform: true
              mode: FAN_AVG
            }
          }
        }
      }
    }

# Second Stage post processing - What do we want to keep at the end !

    second_stage_post_processing {
      batch_non_max_suppression {
        score_threshold: 0.1
        iou_threshold: 0.1
        max_detections_per_class: 150
        max_total_detections: 150
      }
      score_converter: SOFTMAX
    }
    second_stage_localization_loss_weight: 1.5
    second_stage_classification_loss_weight: 1.0
  }
}

# Training configuration

train_config: {
  batch_size: 1
  num_steps: 15000
  optimizer {
    momentum_optimizer: {
      learning_rate: {
        cosine_decay_learning_rate {
          learning_rate_base: .04
          total_steps: 15000
          warmup_learning_rate: .013333
          warmup_steps: 5000
        }
      }
      momentum_optimizer_value: 0.5
    }
    use_moving_average: false
  }

  gradient_clipping_by_norm: 10.0
  fine_tune_checkpoint_version: V2
  fine_tune_checkpoint: "pre-trained-models/faster_rcnn_inception_resnet_v2_1024x1024_coco17_tpu-8/checkpoint/ckpt-0"
  fine_tune_checkpoint_type: "detection"

# Data Augmentation Settings

  data_augmentation_options {
    random_horizontal_flip {
    }
  }

  data_augmentation_options {
    random_adjust_hue {
    }
  }

  data_augmentation_options {
    random_adjust_contrast {
    }
  }

  data_augmentation_options {
    random_adjust_saturation {
    }
  }

  data_augmentation_options {
     random_square_crop_by_scale {
      scale_min: 0.6
      scale_max: 1.3
    }
  }
}

# File path configuration

train_input_reader: {
  label_map_path: "../annotations/label_map.pbtxt"
  tf_record_input_reader {
    input_path: "../annotations/train.record"
  }
}

eval_config: {
  metrics_set: "coco_detection_metrics"
  use_moving_averages: false
  batch_size: 1;
}

eval_input_reader: {
  label_map_path: "../annotations/label_map.pbtxt"
  shuffle: false
  num_epochs: 1
  tf_record_input_reader {
    input_path: "../annotations/test.record"
  }
}
